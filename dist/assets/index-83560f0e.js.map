{"version":3,"file":"index-83560f0e.js","sources":["../../src/views/reports/PayrollReport/TotalPayrollProcessedChart.vue","../../src/views/reports/PayrollReport/TotalComplianceProcessedChart.vue","../../src/views/reports/PayrollReport/Download.vue","../../src/views/reports/PayrollReport/SubscriptionChart.vue","../../src/views/reports/PayrollReport/index.vue"],"sourcesContent":["<template>\n  <div class=\"card card-white\">\n    <div class=\"flex items-center justify-between mb-4\">\n      <div class=\"card-title\">Total Payroll processed</div>\n      <div>\n        <DurationFilter />\n      </div>\n    </div>\n    <div class=\"text-center font-bold text-xl mb-4\" v-if=\"total\">\n      <span class=\"mr-6\">{{ total[0].payrollProcessed }}</span>\n      <span>\n        {{ formatCurrency(total[0].totalSalary) }}\n      </span>\n    </div>\n    <div v-if=\"payrollChartData\" class=\"\">\n      <Bar id=\"my-chart-id\" :options=\"payrollChartOptions\" :data=\"payrollChartData\" />\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport DurationFilter from '@/views/dashboard/DurationFilter.vue'\nimport { Bar } from 'vue-chartjs'\nimport {\n  Chart as ChartJS,\n  Title,\n  Tooltip,\n  Legend,\n  BarElement,\n  CategoryScale,\n  LinearScale\n} from 'chart.js'\nimport { computed } from 'vue'\nimport { formatCurrency } from '@/utils/currency'\n\nChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale)\n\nconst props = defineProps({\n  data: Object,\n  total: Object,\n})\n\n\nconst payrollChartData = computed(() => {\n  if (props.data) {\n    let labels = [],\n      datasets = [];\n\n    props.data.forEach(({ total, month }) => {\n      labels.push(month)\n      datasets.push(total)\n    })\n\n    return {\n      labels: labels,\n      datasets: [\n        {\n          data: datasets,\n          backgroundColor: ['#11453B']\n        }\n      ],\n      borderColor: 'green'\n    }\n  }\n  return null\n\n})\n\nconst payrollChartOptions = {\n  responsive: true,\n  maintainAspectRatio: false,\n  plugins: {\n    legend: {\n      display: false\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped></style>\n","<template>\n  <div class=\"card card-white\">\n    <div class=\"flex items-center mb-4 justify-between\">\n      <div class=\"card-title\">Total compliance Processed</div>\n      <div>\n        <DurationFilter />\n      </div>\n    </div>\n    <div class=\"text-center font-bold text-xl mb-4\" v-if=\"total\">\n      <span class=\"mr-6\">{{ total[0].complianceProcessed }}</span>\n      <span>\n        {{ formatCurrency(total[0].totalCompliance) }}\n      </span>\n    </div>\n    <div class=\"rounded-md\" v-if=\"chartData\">\n      <Bar id=\"my-chart-id\" :options=\"chartOptions\" :data=\"chartData\" />\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { Bar } from 'vue-chartjs'\nimport {\n  Chart as ChartJS,\n  Title,\n  Tooltip,\n  Legend,\n  BarElement,\n  CategoryScale,\n  LinearScale\n} from 'chart.js'\nimport { computed } from 'vue'\nimport { formatCurrency } from '@/utils/currency'\n\nChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale)\n\nconst props = defineProps({\n  data: Object,\n  total: Object,\n})\n\n\nconst chartData = computed(() => {\n  if (props.data) {\n    let labels = [],\n      datasets = [];\n\n    props.data.forEach(({ total, month }) => {\n      labels.push(month)\n      datasets.push(total)\n    })\n\n    return {\n      labels: labels,\n      datasets: [\n        {\n          data: datasets,\n          backgroundColor: ['#11453B']\n        }\n      ],\n      borderColor: 'green'\n    }\n  }\n  return null\n\n})\n\n\n\nconst chartOptions = {\n  responsive: true,\n  maintainAspectRatio: false,\n  plugins: {\n    legend: {\n      display: false\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped></style>\n","<template>\n  <Teleport to=\"body\">\n    <div class=\"fixed opacity -z-2\">\n      <ReportPage id=\"page1\" report-title=\"Payroll Report\" page-no=\"1\" total-pages=\"3\">\n        <div class=\"grid gap-4 h-full\">\n          <TotalPayrollProcessedChart :chart-height=\"400\" />\n          <TotalComplianceProcessedChart />\n        </div>\n      </ReportPage>\n      <ReportPage id=\"page2\" page-no=\"2\" total-pages=\"3\">\n        <div>\n          <h3 class=\"mb-3\">Latest Transactions</h3>\n          <LatestTransactions />\n        </div>\n      </ReportPage>\n\n      <ReportPage id=\"page3\" page-no=\"3\" total-pages=\"3\">\n        <div>\n          <h3 class=\"mb-3\">Payroll List</h3>\n          <PayrollList />\n        </div>\n      </ReportPage>\n    </div>\n  </Teleport>\n  <easiButton2 outlined @click=\"downloadReport\"\n    >Download\n    <template #rightIcon>\n      <DownloadIcon />\n    </template>\n  </easiButton2>\n</template>\n\n<script setup>\nimport TotalPayrollProcessedChart from './TotalPayrollProcessedChart.vue'\nimport TotalComplianceProcessedChart from './TotalComplianceProcessedChart.vue'\nimport PayrollList from './PayrollList.vue'\nimport jsPDF from 'jspdf'\nimport ReportPage from '../ReportPage.vue'\nimport LatestTransactions from '../shared/LatestTransactions.vue'\nimport { htmlToImage } from '../reportUtils'\n\nconst downloadReport = async () => {\n  const [page1, { width: imageWidth, height: imageHeight }] = await htmlToImage('#page1')\n  const doc = new jsPDF({\n    unit: 'px',\n    format: [imageWidth, imageHeight]\n  })\n\n  doc.addImage(page1, 'JPEG', 0, 0, imageWidth, imageHeight)\n  doc.addPage()\n\n  const [page2] = await htmlToImage('#page2')\n  doc.addImage(page2, 'JPEG', 0, 0, imageWidth, imageHeight)\n  doc.addPage()\n\n  const [page3] = await htmlToImage('#page3')\n  doc.addImage(page3, 'JPEG', 0, 0, imageWidth, imageHeight)\n\n  doc.save('payroll-report.pdf')\n\n  return\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.report-container {\n  width: 700px;\n  height: 800px;\n}\n\n.report-horizontal-padding {\n  @apply p-8;\n}\n</style>\n","<template>\n    <div v-if=\"chartData\">\n        <Doughnut :data=\"chartData\" :options=\"chartOptions\" :plugins=\"chartPlugins\" />\n    </div>\n</template>\n<script setup>\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js'\nimport { Doughnut } from 'vue-chartjs'\nimport ChartDataLabels from 'chartjs-plugin-datalabels'\nimport { computed } from 'vue'\n\nconst props = defineProps({\n    data: {\n        type: Object,\n\n    }\n})\n\nconst chartPlugins = [ChartDataLabels]\n\nChartJS.register(ArcElement, Tooltip, Legend)\n\n\nconst chartData = computed(() => {\n    let __colors = ['#396F64', '#B4A572', '#8D8E8D', '#BFA29E', '#11453B']\n\n    const randomColor = (index) => {\n        if (index > __colors.length - 1) {\n            index = Math.floor(Math.random() * __colors.length)\n        }\n        return __colors[index]\n    }\n\n    let datasets = []\n    let labels = []\n    let colors = []\n\n\n    if (props.data) {\n        props.data.breakdown.forEach(({ percentage, subscription }, index) => {\n            labels.push(subscription)\n            datasets.push(percentage)\n            colors.push(\n                randomColor(index)\n            )\n        })\n\n\n\n        return {\n            labels: labels,\n            datasets: [\n                {\n                    backgroundColor: colors,\n                    data: datasets\n                }\n            ]\n        }\n\n    }\n    return null\n})\n\nconst chartOptions = computed(() => {\n    return {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n            legend: {\n                display: true,\n                position: 'right'\n\n            },\n            datalabels: {\n                color: 'white',\n                font: {\n                    size: 16\n                },\n                formatter(value) {\n                    return `${value}%`\n                }\n            }\n        }\n    }\n})\n</script>\n\n\n<style lang=\"scss\" scoped></style>","<template>\n  <div>\n    <ReportHeader title=\"Payroll Report\">\n      <template #download>\n        <Download />\n      </template>\n    </ReportHeader>\n    <div class=\"grid grid-cols-2 gap-6 mb-16\" id=\"report\">\n      <TotalPayrollProcessedChart :data=\"totalProcessed?.payrollGraphData\" :total=\"totalProcessed?.payrollFigures\" />\n      <TotalComplianceProcessedChart :data=\"totalProcessed?.complianceGraphData\"\n        :total=\"totalProcessed?.complianceFigures\" />\n      <div class=\"card card-white\">\n        <h3 class=\"font-normal mb-4\">Payroll Subscriptions</h3>\n        <SubscriptionChart :data=\"subscriptionReport\" />\n        <div class=\"w-32 bg-blue-200 rounded-lg\"></div>\n      </div>\n\n      <div>\n        <div class=\"flex items-center justify-between mb-4\">\n          <h3 class=\"font-normal\">Latest Transactions</h3>\n          <div class=\"w-1/2\">\n            <SearchInput with-filter />\n          </div>\n        </div>\n        <LatestTransactions :data=\"recentTransactions\" />\n      </div>\n    </div>\n\n    <div>\n      <div class=\"flex items-center justify-between mb-4\">\n        <h3 class=\"font-normal\">Payroll List</h3>\n        <div class=\"max-w-md\">\n          <SearchInput with-filter />\n        </div>\n      </div>\n\n      <div :class=\"{ 'opacity-50 pointer-events-none': isLoadingPayrollList }\">\n        <TablePagination v-model:rowsPerPage=\"payrollListPagination.limit\" v-model:page=\"payrollListPagination.page\"\n          :total-pages=\"payrollList?.pagination?.pageTotal\" :total-records=\"payrollList?.pagination?.totalRecords\" />\n        <PayrollList :data=\"payrollList?.docs\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport SearchInput from '@/components/SearchInput.vue'\nimport ReportHeader from '../shared/ReportHeader.vue'\nimport LatestTransactions from '../shared/LatestTransactions.vue'\nimport PayrollList from './PayrollList.vue'\nimport TotalPayrollProcessedChart from './TotalPayrollProcessedChart.vue'\nimport TotalComplianceProcessedChart from './TotalComplianceProcessedChart.vue'\nimport Download from './Download.vue'\nimport SubscriptionChart from './SubscriptionChart.vue'\nimport { useQuery } from \"@/api/useQuery.js\"\nimport TablePagination from '@/components/TablePagination.vue'\nimport { computed, reactive } from 'vue'\n\nconst payrollListPagination = reactive({\n  limit: 10,\n  page: 1,\n})\n\nconst listPayrollInput = computed(() => {\n  return {\n    input: {\n      pagination: {\n        limit: payrollListPagination.limit,\n        page: payrollListPagination.page\n      }\n    }\n  }\n})\n\nconst { data: payrollList, isLoading: isLoadingPayrollList } = useQuery('ListPayroll', listPayrollInput)\n\n\nconst { data: totalProcessed } = useQuery('ListTotalProcessed', {\n  input: {}\n})\n\nconst { data: subscriptionReport } = useQuery('ListSubscriptionsReport', {\n  input: {}\n})\n\nconst { data: recentTransactions } = useQuery('ListRecentTransactions', {\n  input: {}\n})\n\n\n\n</script>\n\n<style lang=\"scss\" scoped></style>\n"],"names":["ChartJS","Title","Tooltip","Legend","BarElement","CategoryScale","LinearScale","payrollChartData","computed","props","labels","datasets","total","month","payrollChartOptions","chartData","chartOptions","downloadReport","page1","imageWidth","imageHeight","htmlToImage","doc","jsPDF","page2","page3","chartPlugins","ChartDataLabels","ArcElement","__colors","randomColor","index","colors","percentage","subscription","value","payrollListPagination","reactive","listPayrollInput","payrollList","isLoadingPayrollList","useQuery","totalProcessed","subscriptionReport","recentTransactions"],"mappings":"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"}