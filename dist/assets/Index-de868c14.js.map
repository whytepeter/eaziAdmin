{"version":3,"file":"Index-de868c14.js","sources":["../../src/views/reconciliation/Table/ReconciliationList.vue","../../src/views/reconciliation/Index.vue"],"sourcesContent":["<template>\n  <div class=\"flex flex-col gap-4\">\n    <div class=\"flex items-center justify-between\">\n      <h2 class=\"text-xl\">Reconciliation List</h2>\n      <easiPaginate\n        v-if=\"data.length\"\n        :data=\"data\"\n        info-only\n        @page:update=\"updatePage\"\n        :currentPage=\"currentPage\"\n        v-model:pageSize=\"pageSize\"\n        :visibleData=\"visibleData\"\n      />\n    </div>\n    <!-- removableSort -->\n    <!-- class=\"RowCursorPointer\" -->\n    <DataTable\n      v-model:selection=\"selectedReconciliation\"\n      id=\"table-style\"\n      scrollable\n      :value=\"visibleData\"\n      @rowSelect=\"onRowSelect\"\n      @rowUnselect=\"onRowUnselect\"\n    >\n      <Column selectionMode=\"multiple\" headerStyle=\"width: 2rem\"> </Column>\n      <Column style=\"white-space: nowrap\" sortable field=\"company\" header=\"Company Name\">\n        <template #body=\"slotProps\">\n          <div class=\"applicant\">\n            <div>\n              <div class=\"applicant-avatar\">\n                <img\n                  v-if=\"slotProps.data.pfp\"\n                  :src=\"slotProps.data.pfp\"\n                  alt=\"\"\n                  class=\"object-cover\"\n                />\n                <span\n                  v-else\n                  class=\"w-full h-full bg-primary flex items-center justify-center text-white font-medium;\"\n                  >{{ initials(slotProps.data.company) }}</span\n                >\n              </div>\n            </div>\n            <div class=\"applicant-name\">\n              {{ slotProps.data.company }}\n            </div>\n          </div>\n        </template>\n      </Column>\n      <Column sortable field=\"totalInflow\" header=\"Total Inflow\">\n        <template #body=\"slotProps\">\n          <div>\n            {{ formatAmount(slotProps.data.totalInflow) }}\n          </div>\n        </template></Column\n      >\n      <Column sortable field=\"totalOutflow\" header=\"Total Outflow\">\n        <template #body=\"slotProps\">\n          <div>\n            {{ formatAmount(slotProps.data.totalOutflow) }}\n          </div>\n        </template></Column\n      >\n      <Column sortable field=\"walletBalance\" header=\"Wallet Balance\">\n        <template #body=\"slotProps\">\n          <div>\n            {{ formatAmount(slotProps.data.walletBalance) }}\n          </div>\n        </template></Column\n      >\n      <Column sortable field=\"reconciliationValue\" header=\"Reconciliation Value\">\n        <template #body=\"slotProps\">\n          <div\n            :class=\"[\n              slotProps.data.reconciliationValue ? 'text-success' : 'text-error',\n              'font-bold capitalize'\n            ]\"\n          >\n            {{ slotProps.data.reconciliationValue }}\n          </div>\n        </template>\n      </Column>\n\n      <Column header=\"Action\">\n        <template #body=\"slotProps\">\n          <button\n            @click=\"onRowClick(slotProps.data)\"\n            class=\"px-4 text-sm text-primary rounded-full border border-primary px-4 py-1\"\n          >\n            View\n          </button>\n        </template>\n      </Column>\n    </DataTable>\n\n    <easiPaginate\n      v-if=\"data.length\"\n      :data=\"data\"\n      @page:update=\"updatePage\"\n      :currentPage=\"currentPage\"\n      v-model:pageSize=\"pageSize\"\n      :visibleData=\"visibleData\"\n    />\n  </div>\n</template>\n\n<script setup>\nimport TablePagination from '@/components/TablePagination.vue'\n\nimport { computed, ref, onMounted, watch } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { helperFunctions } from '@/composable/helperFunctions'\nimport { useDataStore } from '@/stores/data.js'\n\nconst store = useDataStore()\nconst router = useRouter()\nconst { formatAmount, formatDate, initials } = helperFunctions\n\nconst props = defineProps({\n  searchText: {\n    type: String,\n    default: ''\n  },\n  data: {\n    type: Array,\n    default: () => []\n  }\n})\n\nconst watchData = computed(() => props.data)\nconst searchContent = computed(() => props.searchText)\n\nconst visibleData = ref([])\nconst selectedReconciliation = ref([])\n\nconst currentPage = ref(0)\nconst pageSize = ref(10)\n\nconst updatePage = (pageNumber) => {\n  currentPage.value = pageNumber\n  updateVisibleData()\n}\n\nconst updateVisibleData = () => {\n  let datas = props.data\n  visibleData.value = datas.slice(\n    currentPage.value * pageSize.value,\n    currentPage.value * pageSize.value + pageSize.value\n  )\n\n  // if we have 0 visible todos, go back a page\n  if (visibleData.value.length == 0 && currentPage.value > 0) {\n    updatePage(currentPage.value - 1)\n  }\n}\n\nwatch(searchContent, () => {\n  if (searchContent.value.trim() !== '') {\n    visibleData.value = props.data.filter((el) =>\n      el.company.toLowerCase().includes(searchContent.value.toLowerCase())\n    )\n  } else {\n    updateVisibleData()\n  }\n})\n\nwatch(watchData, () => {\n  updateVisibleData()\n})\n\nonMounted(() => {\n  updateVisibleData()\n})\n\nconst onRowClick = (arg) => {\n  console.log(arg)\n  const id = arg._id\n  router.push({ name: 'ViewReconciliation', params: { id } })\n}\nconst onRowSelect = (event) => {\n  selectedReconciliation.value.push(event.data)\n}\nconst onRowUnselect = (event) => {\n  selectedReconciliation.value = selectedReconciliation.value.filter((el) => {\n    return el._id !== event.data._id\n  })\n}\n</script>\n\n<style lang=\"scss\" scope></style>\n","<template>\n  <main class=\"flex flex-col gap-8\">\n    <div class=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4 sm:gap-6\">\n      <WalletCard\n        :value=\"balance && balance.reconciliationValue\"\n        :amount=\"balance && balance.consolidatedBalance\"\n      >\n        <easiButton\n          @click=\"$router.push({ name: 'ReconciliationStatement' })\"\n          color=\"tertiary\"\n          block\n        >\n          <span class=\"text-primary\">View Statement</span>\n        </easiButton>\n      </WalletCard>\n      <InflowOutflowCard :value=\"0.5\" :amount=\"balance && balance.inflow\" date=\"last month\" />\n      <InflowOutflowCard\n        type=\"outflow\"\n        :value=\"0.5\"\n        :amount=\"balance && balance.outflow\"\n        date=\"last month\"\n      />\n    </div>\n\n    <div class=\"mt-10 flex flex-col gap-3\">\n      <Tab :tabItems=\"tabItems\" @onSetActive=\"setActiveTab\" />\n\n      <div class=\"flex flex-col sm:flex-row sm:items-center gap-4 justify-between\">\n        <div class=\"flex items-center gap-4\">\n          <button\n            v-for=\"(btn, i) in actions\"\n            @click=\"btn.action\"\n            :key=\"`btn-${i}`\"\n            class=\"border border-dark-200 rounded-full px-2 py-[1.5px] text-dark-5000 group hover:border-primary\"\n          >\n            <i :class=\"[btn.icon, 'text-xs text-dark-500 group-hover:text-primary mr-1']\"></i>\n            <span class=\"text-dark-500 group-hover:text-primary text-xs\">{{ btn.title }}</span>\n          </button>\n        </div>\n\n        <div class=\"flex items-center gap-2 w-full sm:w-6/12 md:w-5/12\">\n          <easiSearch v-model=\"searchText\" class=\"grow\" />\n          <Filter @loading=\"loading = $event\" />\n        </div>\n      </div>\n    </div>\n\n    <div class=\"mt-4\">\n      <ReconciliationList :payload=\"payload\" :data=\"visibleData\" :searchText=\"searchText\" />\n    </div>\n\n    <easiLoader v-if=\"loading\" />\n  </main>\n</template>\n\n<script setup>\nimport WalletCard from './Card/WalletCard.vue'\nimport InflowOutflowCard from './Card/InflowOutflowCard.vue'\nimport Tab from '@/components/LineTab.vue'\nimport Filter from './shared/ReconciliationFilter.vue'\nimport ReconciliationList from './Table/ReconciliationList.vue'\n\nimport { computed, onMounted, watch, ref } from 'vue'\nimport { useToast } from 'vue-toastification'\nimport { useDataStore } from '@/stores/data.js'\n\nconst store = useDataStore()\nconst { query, mutate } = store\nconst toast = useToast()\n\nconst loading = ref(false)\nconst searchText = ref('')\n\nconst payload = ref({\n  filter: {\n    company: null,\n    month: null,\n    reconciliationValue: null,\n    transaction: null,\n    year: null\n  },\n  pagination: {\n    limit: 1000,\n    page: null\n  }\n})\n\nconst visibleData = ref([])\nconst reconciliations = computed(() => store.getReconciliation)\nconsole.log('REconCiliation...', reconciliations.value)\n\nconst balance = computed(() => store.getReconciliationBalance)\nconsole.log('Balance', balance.value)\n\nconst tabItems = computed(() => {\n  const company =\n    reconciliations.value && reconciliations.value.filter((el) => el.registrationType == 'COMPANY')\n  const personal =\n    reconciliations.value && reconciliations.value.filter((el) => el.registrationType == 'PERSONAL')\n  return [\n    {\n      title: 'All',\n      value: reconciliations.value && reconciliations.value.length\n    },\n    {\n      title: 'Company',\n      value: company && company.length\n    },\n    {\n      title: 'Personal',\n      value: personal && personal.length\n    }\n  ]\n})\nconst setActiveTab = (arg) => {\n  const company =\n    reconciliations.value && reconciliations.value.filter((el) => el.registrationType == 'COMPANY')\n  const personal =\n    reconciliations.value && reconciliations.value.filter((el) => el.registrationType == 'PERSONAL')\n\n  const obj = {\n    Company: company,\n    Personal: personal,\n    All: reconciliations.value\n  }\n\n  visibleData.value = obj[arg.title]\n}\n\nconst actions = computed(() => {\n  return [\n    {\n      title: 'Mark As True',\n      icon: 'pi pi-check',\n      action() {\n        console.log('Mark as True')\n      }\n    },\n    {\n      title: 'Mark As False',\n      icon: 'pi pi-times',\n      action() {\n        console.log('Mark as False')\n      }\n    }\n  ]\n})\n\nwatch(reconciliations, () => {\n  visibleData.value = reconciliations.value\n})\n\nonMounted(() => {\n  visibleData.value = reconciliations.value\n})\n\nconst queryReconciliationList = async () => {\n  try {\n    const res = await query({\n      endpoint: 'GetReconciliationList',\n      payload: {\n        input: payload.value\n      },\n      storeKey: 'reconciliationList'\n    })\n  } catch (error) {\n    console.log(error.message)\n  }\n}\nconst queryBalance = async () => {\n  try {\n    const res = await query({\n      endpoint: 'GetReconciliationBalances',\n      storeKey: 'reconciliationBalance'\n    })\n  } catch (error) {\n    console.log(error.message)\n  }\n}\n\nconst queryRecentTransactions = async () => {\n  try {\n    const payload = {\n      amount: null,\n      company: null,\n      month: null,\n      year: null\n    }\n\n    const res = await query({\n      endpoint: 'ListRecentTransactions',\n      payload: {\n        input: payload\n      },\n      storeKey: 'recentTransactions'\n    })\n  } catch (error) {\n    console.log(error.message)\n  }\n}\n\nqueryBalance()\nqueryReconciliationList()\n// queryRecentTransactions()\n</script>\n\n<style></style>\n"],"names":["useDataStore","router","useRouter","formatAmount","formatDate","initials","helperFunctions","watchData","computed","props","searchContent","visibleData","ref","selectedReconciliation","currentPage","pageSize","updatePage","pageNumber","updateVisibleData","datas","watch","el","onMounted","onRowClick","arg","id","onRowSelect","event","onRowUnselect","store","query","mutate","useToast","loading","searchText","payload","reconciliations","balance","tabItems","company","personal","setActiveTab","obj","actions","queryReconciliationList","res","error"],"mappings":"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"}