{"version":3,"file":"index-1d527b8b.js","sources":["../../src/views/reports/WalletReport/TransactionChart.vue","../../src/views/reports/WalletReport/Download.vue","../../src/views/reports/WalletReport/AvgTransactionFrequency.vue","../../src/views/reports/WalletReport/PieChart.vue","../../src/views/reports/WalletReport/index.vue"],"sourcesContent":["<template>\n  <div class=\"card card-white\">\n    <h3 class=\"chart-title mb-4\">Average Transaction Frequency</h3>\n    <div class=\"gray-block mb-4\">\n      <div class=\"frequency\">{{ frequency }}</div>\n      <div class=\"amount\">{{ amount }}</div>\n    </div>\n    <Bar :data=\"data\" :options=\"chartOptions\" />\n  </div>\n</template>\n\n<script setup>\nimport { Bar } from 'vue-chartjs'\nimport {\n  Chart as ChartJS,\n  Title,\n  Tooltip,\n  Legend,\n  BarElement,\n  CategoryScale,\n  LinearScale\n} from 'chart.js'\n\nChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale)\n\ndefineProps({\n  amount: String,\n  frequency: String,\n  chartTitle: String,\n  data: Object\n})\n\nconst chartOptions = {\n  responsive: true,\n  plugins: {\n    legend: {\n      display: false\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.chart-title {\n  font-size: 18px;\n  font-weight: 400;\n  letter-spacing: 0.25px;\n  color: #444444;\n}\n\n.gray-block {\n  border: 1px solid #e7e8e7;\n  padding: 10px 20px;\n  border-radius: 8px;\n  text-align: left;\n  background-color: #f2f1f1;\n\n  .frequency {\n    @apply text-sm mb-1 capitalize;\n  }\n\n  .amount {\n    font-size: 18px;\n    line-height: 24px;\n    @apply text-[#444444];\n    font-weight: bold;\n  }\n}\n</style>\n","<template>\n  <Teleport to=\"body\">\n    <div class=\"fixed opacity-0 -z-2\">\n      <ReportPage id=\"page1\" report-title=\"Wallet Report\" page-no=\"1\" total-pages=\"3\">\n        <div class=\"grid gap-4\">\n          <TransactionChart :data=\"avgTransactionFreq.daily\" amount=\"141,560,334.03\" frequency=\"Daily\" />\n          <TransactionChart :data=\"avgTransactionFreq.monthly\" amount=\"141,560,334.03\" frequency=\"Monthly\" />\n        </div>\n      </ReportPage>\n\n      <ReportPage id=\"page2\" page-no=\"2\" total-pages=\"3\">\n        <div class=\"grid gap-4\">\n          <TransactionChart :data=\"avgTransactionFreq.yearly\" amount=\"141,560,334.03\" frequency=\"Yearly\" />\n          <!-- <TopupChart /> -->\n        </div>\n      </ReportPage>\n\n      <ReportPage id=\"page3\" page-no=\"3\" total-pages=\"3\">\n        <div class=\"grid gap-4\">\n          <!-- <WithdrawalChart /> -->\n          <LatestTransactions />\n        </div>\n      </ReportPage>\n    </div>\n  </Teleport>\n  <DownloadButton outlined @click=\"downloadReport\" />\n</template>\n\n<script setup>\nimport jsPDF from 'jspdf'\nimport ReportPage from '../ReportPage.vue'\nimport { htmlToImage } from '../reportUtils'\nimport TransactionChart from './TransactionChart.vue'\n// import TopupChart from './TopupChart.vue'\n// import WithdrawalChart from './WithdrawalChart.vue'\nimport LatestTransactions from '../shared/LatestTransactions.vue'\nimport DownloadButton from '../DownloadButton.vue'\n\nconst avgTransactionFreq = {\n  daily: {\n    labels: ['Mon', 'Tues', 'Wed', 'Thurs', 'Fri', 'Sat', 'Sun'],\n    datasets: [\n      {\n        data: [40, 20, 12, 20, 50, 120, 55],\n        backgroundColor: ['#11453B']\n      }\n    ],\n    borderColor: 'green'\n  },\n\n  monthly: {\n    labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'July', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    datasets: [\n      {\n        data: [40, 20, 12, 20, 50, 120, 55, 12, 20, 50, 120, 55, 89],\n        backgroundColor: ['#11453B']\n      }\n    ],\n    borderColor: 'green'\n  },\n\n  yearly: {\n    labels: ['1996', '2005', '2011', '2020', '2035', '2050'],\n    datasets: [\n      {\n        data: [40, 20, 12, 20, 50, 120, 55],\n        backgroundColor: ['#11453B']\n      }\n    ],\n    borderColor: 'green'\n  }\n}\n\nconst downloadReport = async () => {\n  const [page1, { width: imageWidth, height: imageHeight }] = await htmlToImage('#page1')\n  const doc = new jsPDF({\n    unit: 'px',\n    format: [imageWidth, imageHeight]\n  })\n\n  doc.addImage(page1, 'JPEG', 0, 0, imageWidth, imageHeight)\n  doc.addPage()\n\n  const [page2] = await htmlToImage('#page2')\n  doc.addImage(page2, 'JPEG', 0, 0, imageWidth, imageHeight)\n  doc.addPage()\n\n  const [page3] = await htmlToImage('#page3')\n  doc.addImage(page3, 'JPEG', 0, 0, imageWidth, imageHeight)\n\n  doc.save('payroll-report.pdf')\n\n  return\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.report-container {\n  width: 700px;\n  height: 800px;\n}\n\n.report-horizontal-padding {\n  @apply p-8;\n}\n</style>\n","<template>\n    <div>\n        <div class=\"flex gap-4 mb-8 overflow-auto\">\n            <button class=\"frequency-btn\" v-for=\"frequency of frequencies\" :key=\"frequency.frequency\"\n                :class=\"{ active: activeFrequency === frequency.frequency }\"\n                @click=\"() => (activeFrequency = frequency.frequency)\">\n                <div class=\"frequency-btn__frequency\">{{ frequency.frequency }}</div>\n                <div class=\"frequency-btn__amount\">{{ formatCurrency(frequency.amount) }}</div>\n            </button>\n        </div>\n\n        <div class=\"h-[250px] \">\n            <Bar v-if=\"chartData\" :data=\"chartData\" :options=\"chartOptions\" />\n        </div>\n    </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\nimport { Bar } from 'vue-chartjs'\nimport {\n    Chart as ChartJS,\n    Title,\n    Tooltip,\n    Legend,\n    BarElement,\n    CategoryScale,\n    LinearScale\n} from 'chart.js'\nChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale)\nimport { computed } from 'vue';\nimport { formatCurrency } from '@/utils/currency';\n\nconst props = defineProps({\n    data: Object,\n})\n\nconst activeFrequency = ref('daily')\n\n\nconst frequencies = computed(() => {\n    const {\n        averageDailyAmount,\n        averageMonthlyAmount,\n        averageYearlyAmount\n    } = props.data\n\n    return [\n        { frequency: 'daily', amount: averageDailyAmount },\n        { frequency: 'monthly', amount: averageMonthlyAmount },\n        { frequency: 'yearly', amount: averageYearlyAmount }\n    ]\n})\n\nconst chartData = computed(() => {\n    const { weekly, yearly, monthly } = props.data\n\n    let data = {\n        'daily': weekly?.byDays,\n        'monthly': monthly?.byMonths,\n        'yearly': yearly?.byYears,\n    }[activeFrequency.value]\n\n    const shortenMonthAndDay = (label) => {\n        if (/^\\d+$/.test(label)) {\n            // label is a year, don't shorten\n            return label\n        }\n        return label.slice(0, 3);\n    }\n\n    if (data) {\n        const labels = Object.keys(data).map(shortenMonthAndDay)\n        const datasets = Object.values(data)\n        return {\n            labels: labels,\n            datasets: [\n                {\n                    data: datasets,\n                    backgroundColor: ['#11453B']\n                }\n            ],\n            borderColor: 'green'\n        }\n    }\n    return null\n\n})\n\nconst chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n        legend: {\n            display: false\n        }\n    }\n}\n\n\n</script>\n\n<style lang=\"scss\" scoped>\n.frequency-btn {\n    flex: 1;\n    border: 1px solid #e7e8e7;\n    padding: 10px 20px;\n    opacity: 0.6;\n    border-radius: 8px;\n    text-align: left;\n\n    &.active {\n        opacity: 1;\n        background-color: #f2f1f1;\n    }\n\n    &__frequency {\n        @apply text-sm mb-1 capitalize;\n    }\n\n    &__amount {\n        font-size: 18px;\n        line-height: 24px;\n        @apply text-[#444444];\n        font-weight: bold;\n    }\n}\n</style>","<template>\n  <div>\n    <div v-if=\"chartData\">\n      <div class=\"flex items-center\">\n        <div class=\"mr-12\">\n          <Pie :data=\"chartData.chartData\" :options=\"chartOptions\" :plugins=\"chartPlugins\" />\n        </div>\n        <div class=\"legend flex-shrink-0\">\n          <div class=\"legend__item legend__title\">\n            <div class=\"legend__item__label\">{{ data.total.label }}</div>\n            <div class=\"legend__item__value\">{{ formatCurrency(data.total.value) }}</div>\n          </div>\n\n          <div v-for=\"item, index of chartData.legend\" :key=\"`legend-${index}`\" :style=\"{ '--color': item.color }\">\n            <div class=\"legend__item__label\">{{ item.label }}</div>\n            <div class=\"legend__item__value\">{{ item.value }}</div>\n          </div>\n\n        </div>\n      </div>\n    </div>\n\n  </div>\n</template>\n\n<script setup>\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js'\nimport { Pie } from 'vue-chartjs'\nimport ChartDataLabels from 'chartjs-plugin-datalabels'\nimport { computed } from 'vue'\nimport { formatCurrency } from '@/utils/currency'\n\nconst props = defineProps({\n  data: {\n    type: Object,\n  }\n})\n\nconst chartPlugins = [ChartDataLabels]\n\nChartJS.register(ArcElement, Tooltip, Legend)\n\n\nconst chartData = computed(() => {\n  if (props.data) {\n    let { items, total } = props.data;\n\n    let colors = []\n    let datasets = []\n    let labels = []\n\n    const legend = []\n\n    items.forEach(({ label, value, color }) => {\n      let percentage = Number((value / total.value) * 100).toFixed(2)\n      datasets.push(percentage)\n      labels.push(label)\n      colors.push(color)\n\n      legend.push({\n        label: label + ` (${percentage}%)`,\n        color: color,\n        value: formatCurrency(value)\n      })\n    })\n\n    return {\n      chartData: {\n        labels: labels,\n        datasets: [\n          {\n            backgroundColor: colors,\n            data: datasets\n          }\n        ]\n      },\n      legend: legend\n    }\n\n  }\n  return null\n})\n\nconst chartOptions = computed(() => {\n  return {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: false\n      },\n      datalabels: {\n        color: 'white',\n        font: {\n          size: 16\n        },\n        formatter(value) {\n          return `${value}%`\n        }\n      }\n    }\n  }\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.legend {\n  display: grid;\n  gap: 12px;\n\n  &__item {\n    &__label {\n      position: relative;\n      display: flex;\n      align-items: center;\n\n      &::before {\n        content: '';\n        display: inline-block;\n        width: 10px;\n        height: 10px;\n        border-radius: 99px;\n        background: var(--color, gray);\n        margin-right: 4px;\n      }\n    }\n\n    &__value {\n      color: var(--color);\n      font-weight: bold;\n      font-size: 18px;\n    }\n  }\n\n  &__title {\n    .legend__item__label {\n      &::before {\n        display: none;\n      }\n    }\n  }\n}\n</style>\n","<template>\n  <div>\n    <ReportHeader title=\"Wallet Report\">\n      <template #download>\n        <Download />\n      </template>\n    </ReportHeader>\n    <div class=\"grid grid-cols-2 gap-4 gap-y-8\">\n      <div class=\"card card-white\">\n        <h3 class=\"font-medium mb-5\">Average Transaction Frequency</h3>\n        <AvgTransactionFrequency v-if=\"avgTransactionFreqData\" :data=\"avgTransactionFreqData\" />\n      </div>\n\n      <div class=\"card card-white\">\n        <h3 class=\"font-normal mb-4\">Top up</h3>\n\n        <PieChart v-if=\"topUp\" :data=\"topUp\" />\n      </div>\n\n      <div>\n        <div class=\"flex items-center justify-between mb-4\">\n          <h3 class=\"font-medium\">Latest Transactions</h3>\n          <div class=\"w-3/5\">\n            <SearchInput with-filter />\n          </div>\n        </div>\n        <LatestTransactions :data=\"latestTransactionsData\" />\n      </div>\n\n      <div class=\"card card-white\">\n        <h3 class=\"font-normal mb-4\">Withdrawal</h3>\n        <PieChart v-if=\"withdrawal\" :data=\"withdrawal\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport ReportHeader from '../shared/ReportHeader.vue'\nimport {\n  Chart as ChartJS,\n  Title,\n  Tooltip,\n  Legend,\n  BarElement,\n  CategoryScale,\n  LinearScale\n} from 'chart.js'\nimport LatestTransactions from '../shared/LatestTransactions.vue'\nimport { computed, } from 'vue'\nimport Download from './Download.vue'\nimport { useQuery } from '@/api/useQuery'\nimport AvgTransactionFrequency from './AvgTransactionFrequency.vue'\nimport PieChart from './PieChart.vue'\nimport SearchInput from \"@/components/SearchInput.vue\"\n\nChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale)\n\n\n// ViewWalletChart\n// ViewWalletReport\n// ViewWalletReportSingle\n\nconst { data: walletChart, } = useQuery('ViewWalletChart', {\n  input: {\n    filter: 'MONTH'\n  }\n})\nconst { data: walletReport, } = useQuery('ViewWalletReport', {})\n\nconst latestTransactionsData = computed(() => {\n  if (walletReport?.value) {\n    const { walletTransaction } = walletReport.value\n    return walletTransaction.map(record =>\n    ({\n      date: record.createdAt,\n      companyLogo: record.company.company.logo,\n      company: record.company.company.companyName,\n      transaction: record.narration,\n      amount: record.amount,\n    })\n    )\n  }\n  return []\n})\n\nconst avgTransactionFreqData = computed(() => {\n  if (walletReport?.value) {\n    const {\n      averageDailyAmount,\n      averageMonthlyAmount,\n      averageYearlyAmount,\n      weekly,\n      monthly,\n      yearly\n    } = walletReport.value\n\n    return {\n      averageDailyAmount,\n      averageMonthlyAmount,\n      averageYearlyAmount,\n      weekly,\n      monthly,\n      yearly\n    }\n  }\n  return null\n})\n\nconst topUp = computed(() => {\n  if (walletChart && walletChart.value) {\n    let { totalTopUp, paystackTopUp, bankTopUp } = walletChart.value\n\n    // const legend = {\n    //   total: {\n    //     label: 'Total Top up',\n    //     value: totalTopUp\n    //   },\n    //   items: [\n    //     {\n    //       label: 'Bank Transfer (52.1%)',\n    //       value: 500\n    //     },\n    //     {\n    //       label: 'Paystack (47.9%)',\n    //       value: 500\n    //     },\n    //   ]\n    // }\n\n    // return {\n    //   chart,\n    //   legend\n    // }\n\n    const chart = {\n      items: [\n        { value: paystackTopUp, color: '#396F64', label: 'Paystack' },\n        { value: bankTopUp, color: '#11453B', label: 'Bank Transfer' },\n      ],\n      total: {\n        label: 'Total Top up',\n        value: totalTopUp\n      }\n    }\n\n    return chart\n  }\n  return null\n})\n\n\n\nconst withdrawal = computed(() => {\n  if (walletChart && walletChart.value) {\n    let { totalWithdrawal, paystackWithdrawal, bankWithdrawal } = walletChart.value\n\n    const chart = {\n      items: [\n        { value: paystackWithdrawal, color: '#EA4E4B', label: 'Paystack' },\n        { value: bankWithdrawal, color: '#808080', label: 'Bank Transfer' },\n      ],\n      total: {\n        label: 'Total Withdrawal',\n        value: totalWithdrawal\n      }\n    }\n\n    return chart\n  }\n  return null\n})\n\n</script>\n\n<style lang=\"scss\" scoped></style>\n"],"names":["ChartJS","Title","Tooltip","Legend","BarElement","CategoryScale","LinearScale","chartOptions","avgTransactionFreq","downloadReport","page1","imageWidth","imageHeight","htmlToImage","doc","jsPDF","page2","page3","activeFrequency","ref","frequencies","computed","averageDailyAmount","averageMonthlyAmount","averageYearlyAmount","props","chartData","weekly","yearly","monthly","data","shortenMonthAndDay","label","labels","datasets","chartPlugins","ChartDataLabels","ArcElement","items","total","colors","legend","value","color","percentage","formatCurrency","walletChart","useQuery","walletReport","latestTransactionsData","walletTransaction","record","avgTransactionFreqData","topUp","totalTopUp","paystackTopUp","bankTopUp","withdrawal","totalWithdrawal","paystackWithdrawal","bankWithdrawal"],"mappings":"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"}