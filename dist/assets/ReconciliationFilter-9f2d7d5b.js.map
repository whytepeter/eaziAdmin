{"version":3,"file":"ReconciliationFilter-9f2d7d5b.js","sources":["../../src/views/reconciliation/shared/ReconciliationFilter.vue"],"sourcesContent":["<template>\n  <div ref=\"filter\" class=\"relative\">\n    <div\n      @click=\"toggleFilter = true\"\n      class=\"flex items-center justify-between gap-2 rounded-lg bg-newGrey p-2 cursor-pointer\"\n    >\n      <div class=\"flex items-center gap-1\">\n        <span class=\"text-dark-700\">Filter</span>\n        <span v-if=\"activeFilter\" class=\"w-fit truncate w-fit font-medium text-sm text-dark-900\">{{\n          activeFilter\n        }}</span>\n      </div>\n      <div class=\"w-6\">\n        <img :src=\"filterIcon\" alt=\"\" />\n      </div>\n\n      <div\n        v-if=\"toggleFilter\"\n        :class=\"filterPositionClasses\"\n        class=\"absolute h-56 w-52 rounded-xl overflow-hidden overflow-y-auto right-0 shadow-lg bg-white flex flex-col text-sm\"\n        style=\"z-index: 2\"\n      >\n        <div\n          :class=\"[show == option.type ? 'bg-highlight' : '', 'border-b', 'last:border-b-0']\"\n          v-for=\"option in filterOptions\"\n          :key=\"option.name\"\n          @click=\"filterFuction(option)\"\n        >\n          <div\n            :class=\"[show !== option.type ? 'hover:bg-primary-hover hover:text-white' : '']\"\n            class=\"flex items-center gap-3 cursor-pointer px-4 py-2\"\n          >\n            <span>{{ option.name }}</span>\n          </div>\n          <div v-if=\"show == option.type\" class=\"flex flex-col gap-2 px-2 pt-0 pb-3\">\n            <easiTextInput\n              v-model=\"filterDate\"\n              placeholder=\"Month\"\n              type=\"month\"\n              :max=\"maxDate\"\n              inputmode=\"date\"\n            />\n            <easiButton @click=\"handleDate(option)\" size=\"small\" block>Submit</easiButton>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div\n    @click=\"toggleFilter = false\"\n    :class=\"!toggleFilter ? 'pointer-events-none' : ''\"\n    class=\"bg-transparent fixed inset-0\"\n  ></div>\n</template>\n\n<script setup>\nimport filterIcon from '@/assets/icons/filter.svg?url'\nimport { ref, reactive, computed } from 'vue'\nimport { useDataStore } from '@/stores/data.js'\n\nconst store = useDataStore()\nconst { query, mutate } = store\n\nconst activeFilter = ref('')\nconst toggleFilter = ref(false)\nconst filter = ref(null)\n\nconst show = ref(null)\nconst filterDate = ref(null)\nconst maxDate = computed(() => {\n  const currentDate = new Date()\n  return currentDate.toISOString().slice(0, 7)\n})\n\nconst payload = ref({\n  filter: {\n    company: null,\n    month: null,\n    reconciliationValue: null,\n    transaction: null,\n    year: null\n  },\n  pagination: {\n    limit: 1000,\n    page: null\n  }\n})\n\nconst emit = defineEmits(['loading'])\n\nconst filterOptions = reactive([\n  {\n    name: 'All',\n    value: 'all',\n    type: 'all'\n  },\n  {\n    name: 'A - Z',\n    value: 'ASC',\n    type: 'company'\n  },\n\n  {\n    name: 'Z - A',\n    value: 'DESC',\n    type: 'company'\n  },\n  {\n    name: 'True',\n    value: true,\n    type: 'reconciliationValue'\n  },\n  {\n    name: 'False',\n    value: false,\n    type: 'reconciliationValue'\n  },\n  {\n    name: 'Month',\n    value: null,\n    type: 'month'\n  },\n  {\n    name: 'Year',\n    value: null,\n    type: 'year'\n  },\n\n  {\n    name: 'Highest Transaction',\n    value: 'DESC',\n    type: 'transaction'\n  },\n  {\n    name: 'Lowest Transaction',\n    value: 'ASC',\n    type: 'transaction'\n  }\n])\n\nconst filterFuction = async (arg) => {\n  toggleFilter.value = true\n\n  if (arg.type == 'all') {\n    clearFilters()\n    toggleFilter.value = false\n  } else if (arg.type == 'month' || arg.type == 'year') {\n    show.value = arg.type\n    return false\n  } else {\n    clearFilters()\n    payload.value.filter[arg.type] = arg.value\n  }\n\n  toggleFilter.value = false\n  await queryReconciliationList()\n  activeFilter.value = arg.name\n}\n\nconst clearFilters = () => {\n  payload.value.filter = {\n    company: null,\n    month: null,\n    reconciliationValue: null,\n    transaction: null,\n    year: null\n  }\n}\n\nconst handleDate = async (arg) => {\n  const year = filterDate.value.split('-')[0]\n  const month = filterDate.value.split('-')[1]\n\n  console.log(month, year)\n\n  if (arg.type == 'month') {\n    payload.value.filter.month = parseInt(month)\n    console.log(payload.value, month)\n  } else {\n    payload.value.filter.year = parseInt(year)\n    console.log(payload.value, year)\n  }\n\n  await queryReconciliationList()\n  filterDate.value = null\n  activeFilter.value = arg.name\n  toggleFilter.value = false\n  show.value = null\n}\n\nconst filterPositionClasses = computed(() => {\n  if (!toggleFilter.value || !filter.value) {\n    return ''\n  }\n  const filterRect = filter.value.getBoundingClientRect()\n  const screenHeight = window.innerHeight\n  const isNearBottom = filterRect.bottom > screenHeight - 200\n\n  console.log(filterRect.bottom, screenHeight - 200)\n\n  return isNearBottom ? 'bottom-12' : 'top-14'\n})\n\nconst queryReconciliationList = async () => {\n  console.log(payload.value)\n  try {\n    emit('loading', true)\n    const res = await query({\n      endpoint: 'GetReconciliationList',\n      payload: {\n        input: payload.value\n      },\n      storeKey: 'reconciliationList'\n    })\n    emit('loading', false)\n  } catch (error) {\n    emit('loading', false)\n    console.log(error.message)\n  }\n}\n</script>\n\n<style></style>\n"],"names":["store","useDataStore","query","mutate","activeFilter","ref","toggleFilter","filter","show","filterDate","maxDate","computed","payload","filterOptions","reactive","filterFuction","arg","clearFilters","queryReconciliationList","handleDate","year","month","filterPositionClasses","filterRect","screenHeight","isNearBottom","emit","res","error"],"mappings":"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"}