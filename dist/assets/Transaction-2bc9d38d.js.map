{"version":3,"file":"Transaction-2bc9d38d.js","sources":["../../src/views/reconciliation/Table/Transaction.vue"],"sourcesContent":["<template>\n  <div class=\"flex flex-col gap-4\">\n    <div class=\"flex items-center justify-between\">\n      <h2 class=\"text-xl\">{{ user }} Transactions</h2>\n      <easiPaginate\n        :data=\"transactions\"\n        info-only\n        @page:update=\"updatePage\"\n        :currentPage=\"currentPage\"\n        v-model:pageSize=\"pageSize\"\n        :visibleData=\"visibleData\"\n      />\n    </div>\n    <!-- removableSort -->\n    <!-- class=\"RowCursorPointer\" -->\n    <DataTable\n      v-model:selection=\"selectedTransaction\"\n      id=\"table-style\"\n      scrollable\n      :value=\"visibleData\"\n      @rowSelect=\"onRowSelect\"\n      @rowUnselect=\"onRowUnselect\"\n    >\n      <Column selectionMode=\"multiple\" headerStyle=\"width: 2rem\"> </Column>\n\n      <Column style=\"white-space: nowrap\" sortable field=\"company\" header=\"Company Name\">\n        <!-- @click=\"onRowClick(slotProps.data)\"  -->\n        <template #body=\"slotProps\">\n          <div class=\"applicant\">\n            <div>\n              <div class=\"applicant-avatar\">\n                <img\n                  v-if=\"slotProps.data.pfp\"\n                  :src=\"slotProps.data.pfp\"\n                  alt=\"\"\n                  class=\"object-cover\"\n                />\n                <span\n                  v-else\n                  class=\"w-full h-full bg-primary flex items-center justify-center text-white font-medium;\"\n                  >{{ initials(slotProps.data.company) }}</span\n                >\n              </div>\n            </div>\n            <div class=\"applicant-name\">\n              {{ slotProps.data.company }}\n            </div>\n          </div>\n        </template>\n      </Column>\n\n      <Column field=\"transactionId\" header=\"Transaction ID\">\n        <template #body=\"slotProps\">\n          <div style=\"width: 10rem\" class=\"break-words\">\n            {{ checkData(slotProps.data.transactionId) }}\n          </div>\n        </template>\n      </Column>\n\n      <Column sortable field=\"transactionType\" header=\"Type\">\n        <template #body=\"slotProps\">\n          <div\n            :class=\"[\n              slotProps.data.transactionType == 'CREDIT' ? 'text-success' : 'text-error',\n              'font-bold capitalize'\n            ]\"\n          >\n            {{ slotProps.data.transactionType }}\n          </div>\n        </template>\n      </Column>\n\n      <Column sortable field=\"category\" header=\"Category\">\n        <template #body=\"slotProps\">\n          <div class=\"break-words\">\n            {{ checkData(slotProps.data.category) }}\n          </div>\n        </template></Column\n      >\n\n      <Column sortable field=\"walletBalance\" header=\"Amount\">\n        <template #body=\"slotProps\">\n          <div>\n            {{ formatAmount(slotProps.data.walletBalance) }}\n          </div>\n        </template></Column\n      >\n\n      <Column sortable style=\"white-space: nowrap\" field=\"createdAt\" header=\"Date\">\n        <template #body=\"slotProps\">\n          <div class=\"line-clamp-2\">\n            {{ formatDate(slotProps.data.createdAt) }}\n          </div>\n        </template>\n      </Column>\n\n      <Column sortable field=\"status\" header=\"Status\">\n        <template #body=\"slotProps\">\n          <div\n            class=\"py-2 w-fit px-3 text-center rounded-full\"\n            :class=\"getStatus(slotProps.data.status).color\"\n          >\n            {{ getStatus(slotProps.data.status).text }}\n          </div>\n        </template>\n      </Column>\n\n      <Column field=\"description\" header=\"Description\">\n        <template #body=\"slotProps\">\n          <div style=\"width: 18rem\" class=\"line-clamp-2\">\n            {{ formatAmount(slotProps.data.description) }}\n          </div>\n        </template>\n      </Column>\n\n      <Column sortable field=\"walletBalance\" header=\"Wallet Balance\">\n        <template #body=\"slotProps\">\n          <div>\n            {{ formatAmount(slotProps.data.walletBalance) }}\n          </div>\n        </template></Column\n      >\n    </DataTable>\n\n    <easiPaginate\n      :data=\"transactions\"\n      @page:update=\"updatePage\"\n      :currentPage=\"currentPage\"\n      v-model:pageSize=\"pageSize\"\n      :visibleData=\"visibleData\"\n    />\n  </div>\n</template>\n\n<script setup>\nimport { computed, ref, onMounted, watch } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { helperFunctions } from '@/composable/helperFunctions'\nimport { useDataStore } from '@/stores/data.js'\n\nconst store = useDataStore()\nconst router = useRouter()\nconst { formatAmount, formatDate, initials } = helperFunctions\n\nconst props = defineProps({\n  user: String,\n  searchText: {\n    type: String,\n    default: ''\n  },\n  transactions: {\n    type: Array,\n    default: () => []\n  }\n})\n\nconst watchTransactions = computed(() => props.transactions)\nconst searchContent = computed(() => props.searchText)\n\nconst visibleData = ref([])\nconst selectedTransaction = ref([])\n\nconst currentPage = ref(0)\nconst pageSize = ref(10)\n\nconst updatePage = (pageNumber) => {\n  currentPage.value = pageNumber\n  updateVisibleData()\n}\n\nconst updateVisibleData = () => {\n  console.log('Transactions', props.transactions)\n  let datas = props.transactions\n  visibleData.value = datas.slice(\n    currentPage.value * pageSize.value,\n    currentPage.value * pageSize.value + pageSize.value\n  )\n\n  // if we have 0 visible todos, go back a page\n  if (visibleData.value.length == 0 && currentPage.value > 0) {\n    updatePage(currentPage.value - 1)\n  }\n}\n\nconst getStatus = (arg) => {\n  if (arg) {\n    const status = {\n      PROCESSING: {\n        color: 'bg-[#E7F7F8]',\n        text: 'Processing'\n      },\n      COMPLETED: {\n        color: 'bg-[#D4FFE7]',\n        text: 'Completed'\n      },\n      FAILED: {\n        color: 'bg-[#FFEEED]',\n        text: 'Failed'\n      },\n      REVERSED: {\n        color: 'bg-[#F9EDFB]',\n        text: 'Reversed'\n      }\n    }\n    return status[arg]\n  } else {\n    return {\n      color: '',\n      text: 'N/A'\n    }\n  }\n}\n\nconst checkData = (arg) => {\n  return arg ? arg : 'N/A'\n}\n\nwatch(searchContent, () => {\n  if (searchContent.value.trim() !== '') {\n    visibleData.value = props.transactions.filter((el) =>\n      el.company.toLowerCase().includes(searchContent.value.toLowerCase())\n    )\n  } else {\n    updateVisibleData()\n  }\n})\n\nwatch(watchTransactions, () => {\n  updateVisibleData()\n})\n\nonMounted(() => {\n  updateVisibleData()\n})\n\nconst onRowClick = (arg) => {\n  console.log(arg)\n  const id = arg._id\n  router.push({ name: 'ViewReconciliation', params: { id } })\n}\nconst onRowSelect = (event) => {\n  selectedTransaction.value.push(event.data)\n}\nconst onRowUnselect = (event) => {\n  selectedTransaction.value = selectedTransaction.value.filter((el) => {\n    return el._id !== event.data._id\n  })\n}\n</script>\n\n<style lang=\"scss\" scope></style>\n"],"names":["useDataStore","useRouter","formatAmount","formatDate","initials","helperFunctions","watchTransactions","computed","props","searchContent","visibleData","ref","selectedTransaction","currentPage","pageSize","updatePage","pageNumber","updateVisibleData","datas","getStatus","arg","checkData","watch","el","onMounted","onRowSelect","event","onRowUnselect"],"mappings":"+sBA4IcA,EAAc,EACbC,EAAW,EAC1B,KAAM,CAAE,aAAAC,EAAc,WAAAC,EAAY,SAAAC,CAAQ,EAAKC,EAczCC,EAAoBC,EAAS,IAAMC,EAAM,YAAY,EACrDC,EAAgBF,EAAS,IAAMC,EAAM,UAAU,EAE/CE,EAAcC,EAAI,EAAE,EACpBC,EAAsBD,EAAI,EAAE,EAE5BE,EAAcF,EAAI,CAAC,EACnBG,EAAWH,EAAI,EAAE,EAEjBI,EAAcC,GAAe,CACjCH,EAAY,MAAQG,EACpBC,EAAmB,CACrB,EAEMA,EAAoB,IAAM,CAC9B,QAAQ,IAAI,eAAgBT,EAAM,YAAY,EAC9C,IAAIU,EAAQV,EAAM,aAClBE,EAAY,MAAQQ,EAAM,MACxBL,EAAY,MAAQC,EAAS,MAC7BD,EAAY,MAAQC,EAAS,MAAQA,EAAS,KAC/C,EAGGJ,EAAY,MAAM,QAAU,GAAKG,EAAY,MAAQ,GACvDE,EAAWF,EAAY,MAAQ,CAAC,CAEpC,EAEMM,EAAaC,GACbA,EACa,CACb,WAAY,CACV,MAAO,eACP,KAAM,YACP,EACD,UAAW,CACT,MAAO,eACP,KAAM,WACP,EACD,OAAQ,CACN,MAAO,eACP,KAAM,QACP,EACD,SAAU,CACR,MAAO,eACP,KAAM,UACP,CACF,EACaA,CAAG,EAEV,CACL,MAAO,GACP,KAAM,KACP,EAICC,EAAaD,GACVA,GAAY,MAGrBE,EAAMb,EAAe,IAAM,CACrBA,EAAc,MAAM,KAAI,IAAO,GACjCC,EAAY,MAAQF,EAAM,aAAa,OAAQe,GAC7CA,EAAG,QAAQ,YAAa,EAAC,SAASd,EAAc,MAAM,aAAa,CACpE,EAEDQ,EAAmB,CAEvB,CAAC,EAEDK,EAAMhB,EAAmB,IAAM,CAC7BW,EAAmB,CACrB,CAAC,EAEDO,EAAU,IAAM,CACdP,EAAmB,CACrB,CAAC,EAOD,MAAMQ,EAAeC,GAAU,CAC7Bd,EAAoB,MAAM,KAAKc,EAAM,IAAI,CAC3C,EACMC,EAAiBD,GAAU,CAC/Bd,EAAoB,MAAQA,EAAoB,MAAM,OAAQW,GACrDA,EAAG,MAAQG,EAAM,KAAK,GAC9B,CACH"}